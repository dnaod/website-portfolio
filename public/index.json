[{"categories":null,"contents":"In late 2017, the Pacific Post Partum Support Society (PPPSS) conducted a trial texting support program to measure the impact of providing post partum support through text message interactions. What was discovered was that phone support metrics did not change and a new demographic of parents were taking advantage of the service - a group of people who were previously not being given the support they needed through a difficult time in their lives.\nPPPSS undertook the process of getting a grant from the Province to provide this service as part of its regular offering. I was approached and asked to assess a software platform solution that would make this possible. Through a series of meetings, we established our requirements and budget.\nI proceeeded to evaluate a series of platforms that would fulfill our needs and presented my findings to the society. We decided on a platform called iCarol. I participated in the contract negotiations, acting on PPPSS\u0026rsquo;s behalf as their technical expert and was able to leverage the contract negoatiation skills with platform vendors that I practiced in my day job.\nNext was the process of setting up the platform for our needs, which I took on, followed by the training of the trainers for full deployment to the society\u0026rsquo;s staff and wonderful volunteers. Of course, there\u0026rsquo;s always bumps and I helped smooth those out. I\u0026rsquo;m proud to say we\u0026rsquo;ve been offering texting support for those in need since February 2019.\n","permalink":"http://localhost:1313/projects/creations/icarol-sms/","tags":["techtags","used","in","website"],"title":"Text Support Solution for the Pacific Post Partum Support Society"},{"categories":null,"contents":"Feeny Technology Solutions was a boutique technology coaching and IT company I started as a teenager specializing in one-on-one technology consulting, guidance and support for individuals and small businesses. I purposesly kept my client list small in order to provide a very dedicated, close relationship with my customers. This also ensured the business did not distract from my day job as a software engineer and eventual technology leader.\nRespecting some of my residential customers\u0026rsquo; privacy, some of my customers included:\nHigh school teachers Retired Provincial Government professionals Healthcare professionals Resolutionary Electronic Systems Effortless Electronics West Coast Plasma Gallery (West Coast AV Gallery) and more\u0026hellip; In 2018, FTS shut down so that I could focus my off-time on my role at the Pacific Post Partum Support Society.\nHere\u0026rsquo;s a screenshot of the website circa 2011.\n","permalink":"http://localhost:1313/projects/creations/feeny-tech/","tags":["IT"],"title":"Feeny Technology Solutions"},{"categories":null,"contents":"More details coming.\nBut in the meantime, here\u0026rsquo;s a sample of a timelapse video created by this quick little project. Note that the purple hue is due to the IR camera designed to record foliage in low light conditions.\n","permalink":"http://localhost:1313/projects/creations/timelapse-picamera/","tags":["RaspberryPi","Python","bash","linux"],"title":"RaspberryPi-based IR Camera outputting a Timelapse video"},{"categories":null,"contents":"More details on the way\nI led the team responsible for developing Ivanhoe Cambridge\u0026rsquo;s new loyalty and gift card program. This consisted of payment gateway services, a rule-based payment and rewards engine, an accompanying desktop portal, and mobile apps for Android and iPhone.\n","permalink":"http://localhost:1313/projects/contributions/guildford-rewards/","tags":["techtags","used","in","website"],"title":"Guildford Rewards Payment Gateway and Mobile Apps"},{"categories":null,"contents":"** More details on the way!** ","permalink":"http://localhost:1313/projects/contributions/inetco-analytics/","tags":["Java","Hadoop","Tableau"],"title":"INETCO Analytics"},{"categories":null,"contents":"Kiosk NEXTEP - Our team was challenged to release a tablet-based, self-serve ordering system that could handle the demands of restaurants at the Dallas Fort Worth (DFW) airport - and we were asked to do it in a matter of months. We rose to the challenge. Building on and enhancing the Mobile ordering system, and creating a brand new tablet ordering interface, we created and deployed the working system to DFW in under 3 months.\nhttps://hospitalitytech.com/vivonet-streamlines-pos-self-ordering-kiosk\nhttps://www.qsrweb.com/news/vivonet-kiosk-offers-self-order-solution-for-restaurants/\n","permalink":"http://localhost:1313/projects/contributions/vivonet-kiosk/","tags":["Java","Spring","iPadOS","Swift"],"title":"Vivonet Kiosk"},{"categories":null,"contents":"At Rocket, I was selected to start a new Software Configuration Management department, picking or hiring the members, and strengthening our engineering practices across all teams. Growing the team to 4 members, we focused on the areas of build management, branch management, version management, and release management. Our achievements included:\nWrangling multiple branches of source code across multiple teams with varying feature sets into a single, organized set of branches representing our software lifecycle process stages. Creating a TeamCity QuickBuild (and then Jenkins) -based distributed build system with spare hardware to reduce the 144 target total build time for all components from a week to 36 hours. Engaging with Development teams and creating documentation for training and standards of build system standards, and contracts aligning all teams to use the automated build systems, versioning systems, and processes surrounding branching and merging. As our processes matured, I also took on team management of a new Lua script-based test automation team that was reducing testing effort and testing timelines as our games library scaled. When ready for prime-time, the new test automation platform was integrated into the automated build and reporting system. This reduced the amount of time for autoamted testing results to be delivered to the teams, and decreased the number of errors that were deployed to production.\n","permalink":"http://localhost:1313/projects/contributions/rocket-build/","tags":["Jenkins","Ant/Nant","distributed computing"],"title":"Rocket Builds"},{"categories":null,"contents":"More detail of the actual gaming server on its way!\nRed Hawk Gaming was a company contracted by the Miami Tribe of Oklahoma owned Rocket Gaming Systems. Rocket was an indigenous owned company that built casino games and systems sold and installed to casino operators throughout the U.S. Red Hawk developed all the software for Rocket in its Vancouver office while hardware was developed in Rocket\u0026rsquo;s Grove, Oklahoma office.\nI joined the team responsible for developing the C++ based server software. At the time of joining, taxation laws for casino profits were in a state of flux and Red Hawk was creating a new style of gaming server based on a Bingo game behind the scenes but still presenting a user experience that matched the traditional slots game. This \u0026ldquo;Class 3\u0026rdquo; gaming would have a more favourable tax structure ensuring more profits went to indigenous community development.\nClass 3 Community gaming meant that multiple players must join and participate in the same game. This required creating a distributed system when players pressed the spin button, they joined a virtual lobby connecting multiple players within the same casino until the player threshold was met and the game could proceed. If that threshold was not met, the player would then be added to a lobby across multiple casinos attempting to meet that threshold. When the players\u0026rsquo; bingo cards were registered with the game, a virtual ball caller would draw balls until one or more winners was found and prizes were distributed - often as another entertaining meta-game.\nMid-project, the senior engineer responsible for this new Class 3 gaming system left the company with many aspects of the distributed networking and virtual ball caller algorithm incomplete. I took over as lead developer. I refactored and completed the project, and worked directly with gaming regulators, including travelling to the U.S., to certify our new random number generator and gaming server. Rocket Gaming was awarded the first Class 3 gaming license of this form in the U.S.\n","permalink":"http://localhost:1313/projects/contributions/class-3-gaming-server/","tags":["C++","Windows"],"title":"A Casino-wide Multiplayer Class 3 Gaming Server for Slot Machines"},{"categories":null,"contents":"In 2000, mobile data technology was just beginning to sprout in the business world. Microsoft was working on Windows Mobile while Palm were the darling of keyboard warriors. Before desktop VPN standards had made the jump to mobile devices, Infowave was ahead of its time creating connectors that gave mobile devices access to companies\u0026rsquo; resources with their firewalls - extending applications previously only available while on-site to the mobile workers of the world.\nWhen the Gen2 project came to an end, I was asked to join a R\u0026amp;D team creating prototypes for future Infowave products focused on experimenting with mobile services that did not yet exist. During this time, I created a prototype server which would allow mobile device users to view Microsoft Office documents they received in their email. At the time, mobile devices could not view Office documents natively and this service allowed any device. A user would forward the email to a predetermined email address and a server would extract the Office document, convert that document to HTML, and publish it on a web server. The user would receive an email with a custom unique link, protected by their enterprise credentials, that they could navigate to with their mobile browser or WAP browser, allowing users to finally view Office documents on early mobile devices. This prototype was created with Microsoft Server, Microsoft C++, Office OLE Automation.\nAn AI generated picture of what a WAP -enabled phone may have displayed. Remember, this was a time when there was no way to view a Microsoft Office document on a mobile device.\nA litte more about my time at Infowave\u0026hellip;\nThe first team I joined was a partnership between Infowave and Intel (called Gen2) working on porting Infowave\u0026rsquo;s Enterprise Connector on a prototype mobile device intended for future market release. This incredible device was way ahead of its time. Based on a Gentoo linux platform and bleeding-edge 800x600 screen equipped with a stylus in a form factor similar to a Game Boy Advance. I was responsible for porting Infowave\u0026rsquo;s Enterprise Connector components to that platform. This involved many cross-company meetings with Intel and weekly travel from Vancouver to Hillsborough, Oregon for collaborative work.\nAt one point during the project, Intel was dissatisfied with the effort level to build and install the product consistenly, threatening to end their relationship with Infowave. In response, myself and another other developer took over those responsibilities working 72 hours straight, organizing and creating a repeatable and consistent build and install process. Thus salvaging the relationship and contract for Infowave.\nAnd then began the early 2000s tech crash and Infowave began a long series of restructurings. During this time and sadly only for a short time, i was transferred to a team where I was responsible for the Installshield based installer.\n","permalink":"http://localhost:1313/projects/contributions/msoffice-mobile-web/","tags":["C++","Office OLE Automation","WAP","HTML"],"title":"Office Doc Attachments Display Service for Early Mobile Web Devices"},{"categories":null,"contents":"More detail on its way!\nThe Canada Arm 2 project was a robotic arm installed on the International Space Station. It remains in operation today performing a variety of tasks from loading and unloading cargo modules to assisting extra vehicular activities by astronauts during station maintenance tasks. MDA was responsible for the command and control software that drove the 3 major pieces of the arm: the Space Station Remote Manipulator System (SSRMS), Mobile Base System (MBS), and Special Purpose Dextrous Manipulator (SPDM but later renamed \u0026ldquo;Dextre\u0026rdquo;).\nI had 3 roles during my tenure at MDA. I first acted as a test member creating test scripts for our automated test system. During this time, I led a team of 2 as we enhanced and extended the test suite. Once a defect was found, we debugged the Ada code to correct the source code and submit the fixes.\nI also debugged and validated the self-diagnostic assembly source code written. I discovered a critical defect which would have corrupted the command and control software completely, leading to a complete shutdown of the arm operations.\nLastly, I wrote the code for a subcomponent of the MBS called the Payload Orbital Accomodator (POA). This was a docking port on the MBS where the SSRMS could attach payload modules. Once a payload was attached to the POA, the Power Data Grapple Fixure (PDGF) would apply power and data to the payload for the collection of sensor data and application of heating - protecting the payload from the brutal space environment.\n","permalink":"http://localhost:1313/projects/contributions/mbs-poa/","tags":["Ada83/Ada95","Unix","6086 assembly"],"title":"Canada Arm 2's Mobile Base System Payload Orbital Accomodator"},{"categories":null,"contents":"","permalink":"http://localhost:1313/contact/","tags":null,"title":"Dan Feeny"}]